// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	C++ class header boilerplate exported from UnrealHeaderTool.
	This is automatically generated by the tools.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "ObjectBase.h"

PRAGMA_DISABLE_DEPRECATION_WARNINGS
class UObject;
class ULeapFrame;
#ifdef LEAPMOTION_LeapController_generated_h
#error "LeapController.generated.h already included, missing '#pragma once' in LeapController.h"
#endif
#define LEAPMOTION_LeapController_generated_h

#define osu3d_cpp_Plugins_LeapMotion_Source_LeapMotion_Public_LeapController_h_9_RPC_WRAPPERS \
 \
	DECLARE_FUNCTION(execSetInterfaceDelegate) \
	{ \
		P_GET_OBJECT(UObject,Z_Param_newDelegate); \
		P_FINISH; \
		this->SetInterfaceDelegate(Z_Param_newDelegate); \
	} \
 \
	DECLARE_FUNCTION(execEnableGesture) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_type); \
		P_GET_UBOOL(Z_Param_enable); \
		P_FINISH; \
		this->EnableGesture(LeapGestureType(Z_Param_type),Z_Param_enable); \
	} \
 \
	DECLARE_FUNCTION(execEnableBackgroundTracking) \
	{ \
		P_GET_UBOOL(Z_Param_trackInBackground); \
		P_FINISH; \
		this->EnableBackgroundTracking(Z_Param_trackInBackground); \
	} \
 \
	DECLARE_FUNCTION(execEnableImageSupport) \
	{ \
		P_GET_UBOOL(Z_Param_allowImages); \
		P_GET_UBOOL(Z_Param_emitImageEvents); \
		P_FINISH; \
		this->EnableImageSupport(Z_Param_allowImages,Z_Param_emitImageEvents); \
	} \
 \
	DECLARE_FUNCTION(execOptimizeForHMD) \
	{ \
		P_GET_UBOOL(Z_Param_useTopdown); \
		P_GET_UBOOL(Z_Param_autoRotate); \
		P_GET_UBOOL(Z_Param_autoShift); \
		P_FINISH; \
		this->OptimizeForHMD(Z_Param_useTopdown,Z_Param_autoRotate,Z_Param_autoShift); \
	} \
 \
	DECLARE_FUNCTION(execIsServiceConnected) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->IsServiceConnected(); \
	} \
 \
	DECLARE_FUNCTION(execHasFocus) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->HasFocus(); \
	} \
 \
	DECLARE_FUNCTION(execFrame) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_history); \
		P_FINISH; \
		*(ULeapFrame**)Z_Param__Result=this->Frame(Z_Param_history); \
	} \
 \
	DECLARE_FUNCTION(execIsConnected) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->IsConnected(); \
	}


#define osu3d_cpp_Plugins_LeapMotion_Source_LeapMotion_Public_LeapController_h_9_RPC_WRAPPERS_NO_PURE_DECLS \
 \
	DECLARE_FUNCTION(execSetInterfaceDelegate) \
	{ \
		P_GET_OBJECT(UObject,Z_Param_newDelegate); \
		P_FINISH; \
		this->SetInterfaceDelegate(Z_Param_newDelegate); \
	} \
 \
	DECLARE_FUNCTION(execEnableGesture) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_type); \
		P_GET_UBOOL(Z_Param_enable); \
		P_FINISH; \
		this->EnableGesture(LeapGestureType(Z_Param_type),Z_Param_enable); \
	} \
 \
	DECLARE_FUNCTION(execEnableBackgroundTracking) \
	{ \
		P_GET_UBOOL(Z_Param_trackInBackground); \
		P_FINISH; \
		this->EnableBackgroundTracking(Z_Param_trackInBackground); \
	} \
 \
	DECLARE_FUNCTION(execEnableImageSupport) \
	{ \
		P_GET_UBOOL(Z_Param_allowImages); \
		P_GET_UBOOL(Z_Param_emitImageEvents); \
		P_FINISH; \
		this->EnableImageSupport(Z_Param_allowImages,Z_Param_emitImageEvents); \
	} \
 \
	DECLARE_FUNCTION(execOptimizeForHMD) \
	{ \
		P_GET_UBOOL(Z_Param_useTopdown); \
		P_GET_UBOOL(Z_Param_autoRotate); \
		P_GET_UBOOL(Z_Param_autoShift); \
		P_FINISH; \
		this->OptimizeForHMD(Z_Param_useTopdown,Z_Param_autoRotate,Z_Param_autoShift); \
	} \
 \
	DECLARE_FUNCTION(execIsServiceConnected) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->IsServiceConnected(); \
	} \
 \
	DECLARE_FUNCTION(execHasFocus) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->HasFocus(); \
	} \
 \
	DECLARE_FUNCTION(execFrame) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_history); \
		P_FINISH; \
		*(ULeapFrame**)Z_Param__Result=this->Frame(Z_Param_history); \
	} \
 \
	DECLARE_FUNCTION(execIsConnected) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->IsConnected(); \
	}


#define osu3d_cpp_Plugins_LeapMotion_Source_LeapMotion_Public_LeapController_h_9_INCLASS_NO_PURE_DECLS \
	private: \
	static void StaticRegisterNativesULeapController(); \
	friend LEAPMOTION_API class UClass* Z_Construct_UClass_ULeapController(); \
	public: \
	DECLARE_CLASS(ULeapController, UActorComponent, COMPILED_IN_FLAGS(0), 0, LeapMotion, NO_API) \
	DECLARE_SERIALIZER(ULeapController) \
	/** Indicates whether the class is compiled into the engine */    enum {IsIntrinsic=COMPILED_IN_INTRINSIC}; \
	virtual UObject* _getUObject() const override { return const_cast<ULeapController*>(this); }


#define osu3d_cpp_Plugins_LeapMotion_Source_LeapMotion_Public_LeapController_h_9_INCLASS \
	private: \
	static void StaticRegisterNativesULeapController(); \
	friend LEAPMOTION_API class UClass* Z_Construct_UClass_ULeapController(); \
	public: \
	DECLARE_CLASS(ULeapController, UActorComponent, COMPILED_IN_FLAGS(0), 0, LeapMotion, NO_API) \
	DECLARE_SERIALIZER(ULeapController) \
	/** Indicates whether the class is compiled into the engine */    enum {IsIntrinsic=COMPILED_IN_INTRINSIC}; \
	virtual UObject* _getUObject() const override { return const_cast<ULeapController*>(this); }


#define osu3d_cpp_Plugins_LeapMotion_Source_LeapMotion_Public_LeapController_h_9_STANDARD_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API ULeapController(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(ULeapController) \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, ULeapController); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(ULeapController); \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API ULeapController(const ULeapController& InCopy); \
public:


#define osu3d_cpp_Plugins_LeapMotion_Source_LeapMotion_Public_LeapController_h_9_ENHANCED_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API ULeapController(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()) : Super(ObjectInitializer) { }; \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API ULeapController(const ULeapController& InCopy); \
public: \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, ULeapController); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(ULeapController); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(ULeapController)


#define osu3d_cpp_Plugins_LeapMotion_Source_LeapMotion_Public_LeapController_h_6_PROLOG
#define osu3d_cpp_Plugins_LeapMotion_Source_LeapMotion_Public_LeapController_h_9_GENERATED_BODY_LEGACY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	osu3d_cpp_Plugins_LeapMotion_Source_LeapMotion_Public_LeapController_h_9_RPC_WRAPPERS \
	osu3d_cpp_Plugins_LeapMotion_Source_LeapMotion_Public_LeapController_h_9_INCLASS \
	osu3d_cpp_Plugins_LeapMotion_Source_LeapMotion_Public_LeapController_h_9_STANDARD_CONSTRUCTORS \
public: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define osu3d_cpp_Plugins_LeapMotion_Source_LeapMotion_Public_LeapController_h_9_GENERATED_BODY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	osu3d_cpp_Plugins_LeapMotion_Source_LeapMotion_Public_LeapController_h_9_RPC_WRAPPERS_NO_PURE_DECLS \
	osu3d_cpp_Plugins_LeapMotion_Source_LeapMotion_Public_LeapController_h_9_INCLASS_NO_PURE_DECLS \
	osu3d_cpp_Plugins_LeapMotion_Source_LeapMotion_Public_LeapController_h_9_ENHANCED_CONSTRUCTORS \
static_assert(false, "Unknown access specifier for GENERATED_BODY() macro in class LeapController."); \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#undef CURRENT_FILE_ID
#define CURRENT_FILE_ID osu3d_cpp_Plugins_LeapMotion_Source_LeapMotion_Public_LeapController_h


PRAGMA_ENABLE_DEPRECATION_WARNINGS
